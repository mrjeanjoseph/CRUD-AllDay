@using Chapter23.AjaxHelperMethods.Models
@model string

@{
    ViewBag.Title = "Get People";
    AjaxOptions ajaxOpts = new AjaxOptions
    {
        UpdateTargetId = "tablebody",
        Url = Url.Action("GetPeopleData"),
        LoadingElementId = "Loading",
        LoadingElementDuration = 500,
        OnSuccess = "ProcessData"
        //Confirm = "Do you want new data"
    };
    //Perfect Example
}

<h2>Get People Data The AjaxWay</h2>
<div id="Loading" class="Load" style="display:none;">
    <p>Loading Data...</p>
</div>

<table>
    <thead>
        <tr><th>First Name</th><th>Last Name</th><th>Role</th></tr>
    </thead>
    <tbody id="tablebody">
        @Html.Action("GetPeopleData", new { selectedRole = Model })
    </tbody>
</table>

<p>Server processing time: @ViewBag.ServerProcessingTime ms</p>

@using (Ajax.BeginForm(ajaxOpts)) {
    <div id="people-form">
        @Html.DropDownList("selectedRole", new SelectList(
            new[] { "All" }.Concat(Enum.GetNames(typeof(Role)))))
        <button id="filter-btn" type="submit">Filter</button>
    </div>
}

<div>
    @foreach (string role in Enum.GetNames(typeof(Role))) {
        <div class="ajaxLink">
            @Ajax.ActionLink(role, "GetPeople",
            new { selectedRole = role },
            new AjaxOptions {
                Url = Url.Action("GetPeopleData", new { selectedRole = role }),
                OnSuccess = "ProcessData",
            })
        </div>
    }
</div>
<br />
<hr />


<script type="text/javascript">

    function OnBegin() {
        alert("This is the OnBegin Callback");
    }

    function OnSuccess(data) {
        alert("This is the OnSuccess Callback" + data);
    }

    function OnFailure(request, error) {
        alert("This is the OnFailure Callback" + error);
    }

    function OnComplete(request, status) {
        alert("This is the OnFailure Callback" + status);
    }


    //Using Json
    function ProcessData(data) {
        var target = $("#tablebody");
        target.empty();
        for (var i = 0; i < data.length; i++) {
            var person = data[i];
            target.append("<tr><td>" + person.FirstName + "++</td><td>")
                + person.LastName + "</td><td>" + person.Role + "</td></td>"
        }
    }


</script>