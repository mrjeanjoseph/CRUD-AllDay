name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
  workflow_dispatch: {}

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Debug — list repository root and Portfolio
        run: |
          echo "Repository files at root:"
          ls -la
          echo "--- Portfolio contents ---"
          ls -la Portfolio || true

      - name: Prepare app artifact (install & build if needed)
        id: prepare
        run: |
          # Default app_location (adjust if your app isn't in Portfolio)
          echo "app_location=Portfolio" >> $GITHUB_OUTPUT

          # If there's a package.json, try to build and then detect common build folders
          if [ -f "Portfolio/package.json" ]; then
            echo "Found Portfolio/package.json — running install and build (if present)"
            # Install Node (use Node 18). If runner already has node this is harmless.
            curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash - || true
            sudo apt-get install -y nodejs || true
            cd Portfolio
            npm ci
            npm run build --if-present

            # Look for common build/output folders inside Portfolio
            found=""
            for d in build dist wwwroot public out; do
              if [ -d "$d" ] && [ -n "$(ls -A $d 2>/dev/null)" ]; then
                found="$d"
                break
              fi
              # also allow a single index.html at the folder (serve-root)
              if [ -f "$d/index.html" ]; then
                found="$d"
                break
              fi
            done

            if [ -n "$found" ]; then
              echo "Detected artifact folder: $found"
              echo "deploy_output=$found" >> $GITHUB_OUTPUT
            else
              # Maybe the build produced files directly into Portfolio root
              if [ -f "index.html" ]; then
                echo "No common build folder found, but index.html exists in Portfolio root — deploying root"
                echo "deploy_output=" >> $GITHUB_OUTPUT
              else
                echo "::warning::No build artifacts detected inside Portfolio after build. Deployment may fail."
                # Leave deploy_output empty so action can be configured manually if needed
                echo "deploy_output=" >> $GITHUB_OUTPUT
              fi
            fi
            cd -
          else
            # No package.json: assume static assets live in Portfolio root (index.html)
            if [ -f "Portfolio/index.html" ]; then
              echo "No package.json and found Portfolio/index.html — deploying Portfolio root"
              echo "deploy_output=" >> $GITHUB_OUTPUT
            else
              echo "::warning::No package.json and no Portfolio/index.html found — check app_location or add build steps"
              echo "deploy_output=" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          # Fallback: use specific token or generic AZURE_STATIC_WEB_APPS_API_TOKEN
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_GRASS_0502E270F || secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - update these to match your project ######
          # For more info: https://aka.ms/swaworkflowconfig
          app_location: "Portfolio" # App source code path (change to "/" or another folder if needed)
          # output_location is relative to app_location. If empty string, deploy will use app_location root.
          output_location: ${{ steps.prepare.outputs.deploy_output }}
          # We've built (or not) in previous step; skip Oryx app build to avoid detection issues
          skip_app_build: true
          api_location: "Api"       # Api source code path - optional (set to "" if none)
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_GRASS_0502E270F || secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
